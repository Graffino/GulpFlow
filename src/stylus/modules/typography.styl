/**
 * Typography
 * Author: Graffino (http://www.graffino.com)
 */



/**
 * Headings
 */

// Moving the $headings hash to another file makes it impossible
// to use it without another import in this partial (which results in duplicated code)
$headings = {
    h1: {stack: $sans-fontface-stack, size: rem(36), weight: 500, line-height: rem(41)},
    h2: {stack: $sans-fontface-stack, size: rem(24), weight: 500, line-height: rem(36)},
    h3: {stack: $sans-fontface-stack, size: rem(20), weight: 500, line-height: rem(32)},
    h4: {stack: $sans-fontface-stack, size: rem(18), weight: 500, line-height: rem(28)},
    h5: {stack: $sans-fontface-stack, size: rem(16), weight: 500, line-height: rem(24)},
    h6: {stack: $sans-fontface-stack, size: rem(14), weight: 500, line-height: rem(22)}
}

// Creating styling blocks for "h1" to "h6" tags and ".h1" to ".h6" classes
for key, heading in $headings {
    {key},
    .{key} {
        margin: 0;
        padding: 0;
        color: $color-heading;
        font-family: heading.stack;
        font-size: heading.size;
        font-weight: heading.weight;
        line-height: heading.line-height;

        // Default font-family until webfonts are loaded
        .no-fonts & {
            font-family: $fonts-stack-system-sans;
        }
    }
}

.heading {
    position: relative;
    margin: 0;
    padding: 0;
    color: $color-heading;
    word-break: break-word;
    hyphens: auto;

    // Default font-family until webfonts are loaded
    .no-fonts & {
        font-family: $fonts-stack-system-sans;
    }

    for key, heading in $headings {
        &.is-{key} {
            font-family: heading.stack;
            font-size: heading.size;
            font-weight: heading.weight;
            line-height: heading.line-height;
        }
    }

    // Adding font-weight modifier classes (e.g. ".-font-weight-200")
    font-weight-scale();

    // Adding margin modifier classes (e.g. ".-margin-bottom-one")
    margin-scale();

    // Generate color themeing for headings
    font-colors();

    // Generate available text-modifiers
    text-modifiers();
}


$copy = {
    huge: {stack: $sans-fontface-stack, size: rem(24), weight: 500, line-height: 1.2},
    xlarge: {stack: $sans-fontface-stack, size: rem(20), weight: 500, line-height: 1.2},
    large: {stack: $sans-fontface-stack, size: rem(16), weight: 500, line-height: 1.2},
    medium: {stack: $sans-fontface-stack, size: rem(14), weight: 500, line-height: 1.2},
    small: {stack: $sans-fontface-stack, size: rem(12), weight: 500, line-height: 1.2},
    legal: {stack: $sans-fontface-stack, size: rem(11), weight: 500, line-height: 1.2},
    fine: {stack: $sans-fontface-stack, size: rem(10), weight: 500, line-height: 1.2},
    xsmall: {stack: $sans-fontface-stack, size: rem(8), weight: 500, line-height: 1.2}
}

.text {
    color: $color-default;
    font-weight: 500;

    // Default font-family until webfonts are loaded
    .no-fonts & {
        font-family: $fonts-stack-system-sans;
    }

    &.-no-wrap {
      white-space: nowrap;
    }

    &.-overflow-ellipsis {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    for key, style in $copy {
        &.-size-{key} {
            font-family: style.stack;
            font-size: style.size;
            font-weight: style.weight;
            line-height: style.line-height;
        }
    }

    // Adding font-weight modifier classes (e.g. ".-font-weight-200")
    font-weight-scale();

    // Adding margin modifier classes (e.g. ".-margin-bottom-one")
    margin-scale();

    // Generate color theming for headings
    font-colors();

    // Generate available text-modifiers
    text-modifiers();

    &.-type {
      &-transparent {
        opacity: 0.6;
      }
    }
}

/**
 * Links
 */

.link {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    color: $color-link;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: transition-custom();
    transition-property: color;

    font-weight-scale();

    &:hover {
        color: $color-link-hover;
    }

    &.-color {
        &-primary {
          color: $color-primary;
        }

        &-blue {
          color: $palette-blue;
        }

        &-yellow {
          color: $palette-yellow;
        }

        &-text {
          color: $color-text;
        }
    }

    &.-size {
        &-small {
            font-size: rem(12);
        }
    }
}

/**
 * Lists
 */

.list {
  margin: 0;
  padding: 0;
  text-align: left;

  &.-style {
    &-none {
      list-style: none;
    }

    &-roman {
      list-style-type: upper-roman;

      .list__item {
        &::before {
          text-align: left;
        }
      }
    }
  }
}
